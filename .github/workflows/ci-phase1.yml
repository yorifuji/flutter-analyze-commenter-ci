name: ci-phase1

run-name: ci-phase1

on: workflow_dispatch

permissions:
  contents: write
  pull-requests: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  GIT_USER_EMAIL: "41898282+github-actions[bot]@users.noreply.github.com"
  GIT_USER_NAME: "github-actions[bot]"

jobs:
  delete-branches:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Delete 'test/' branches
        uses: actions/github-script@v7
        with:
          script: |
            const pattern = /^test\//;
            const branches = await github.rest.repos.listBranches({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });
            for (const branch of branches.data) {
              console.log(`Checking branch: ${branch.name}`);
              if (pattern.test(branch.name)) {
                await github.rest.git.deleteRef({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  ref: `heads/${branch.name}`,
                });
                console.log(`Deleted branch: ${branch.name}`);
              }
            }

  test-new-issue:
    needs: delete-branches
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        branch: [main, develop, v1]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          git checkout -b test/${{ matrix.branch }}/new-issue origin/_template/new-issue
          git config --local user.name $GIT_USER_NAME
          git config --local user.email $GIT_USER_EMAIL
          git commit --amend -m "$(git log -1 --pretty=%B) $(date +%s) ${{ matrix.branch }}"
          git push origin test/${{ matrix.branch }}/new-issue
          gh pr create --base main --head test/${{ matrix.branch }}/new-issue --title "[CI: test/${{ matrix.branch }}] Issue" --body "[CI: test/${{ matrix.branch }}] Issue"

  test-max-issue:
    needs: delete-branches
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        branch: [main, develop, v1]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          git checkout -b test/${{ matrix.branch }}/max-issue origin/_template/max-issue
          git config --local user.name $GIT_USER_NAME
          git config --local user.email $GIT_USER_EMAIL
          git commit --amend -m "$(git log -1 --pretty=%B) $(date +%s) ${{ matrix.branch }}"
          git push origin test/${{ matrix.branch }}/max-issue
          gh pr create --base main --head test/${{ matrix.branch }}/max-issue --title "[CI: test/${{ matrix.branch }}] Max Issue" --body "[CI: test/${{ matrix.branch }}] Max Issue"

  test-no-issue:
    needs: delete-branches
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        branch: [main, develop, v1]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          git checkout -b test/${{ matrix.branch }}/no-issue origin/_template/no-issue
          git config --local user.name $GIT_USER_NAME
          git config --local user.email $GIT_USER_EMAIL
          git commit --amend -m "$(git log -1 --pretty=%B) $(date +%s) ${{ matrix.branch }}"
          git push origin test/${{ matrix.branch }}/no-issue
          gh pr create --base main --head test/${{ matrix.branch }}/no-issue --title "[CI: test/${{ matrix.branch }}] no Issue" --body "[CI: test/${{ matrix.branch }}] no Issue"

  test-summary:
    needs: delete-branches
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        branch: [main, develop, v1]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          git checkout -b test/${{ matrix.branch }}/summary-head origin/_template/summary-head
          git config --local user.name $GIT_USER_NAME
          git config --local user.email $GIT_USER_EMAIL
          git commit --amend -m "$(git log -1 --pretty=%B) $(date +%s) ${{ matrix.branch }}"
          git push origin test/${{ matrix.branch }}/summary-head
          gh pr create --base _template/summary-base --head test/${{ matrix.branch }}/summary-head --title "[CI: test/${{ matrix.branch }}] Summary" --body "[CI: test/${{ matrix.branch }}] Summary"
